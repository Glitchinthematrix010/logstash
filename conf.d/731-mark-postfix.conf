filter {
  if [syslog][identifier] =~ /^postfix/ {
    mutate {
      add_field => { "application" => "Postfix" }
    }
    grok {
      patterns_dir => [ "/etc/logstash/patterns.d/" ]
      tag_on_failure => [ ]
      add_tag => [ "Known Message", "Benign" ]
      match => { "message" => [
        "^%{POSTFIX_QUEUE_ID}: %{GREEDYDATA:[@metadata][details]}$",
        "^%{POSTFIX_QUEUE_ID}: removed$",
        "^%{POSTFIX_QUEUE_ID}: warning: header (S|s)ubject: %{DATA:[postfix][subject]}; from=<%{EMAIL_ADDRESS:[postfix][from]}>( to=<%{EMAIL_ADDRESS:[postfix][to]}]>)?$",
        "^(refresh|start)ing the Postfix mail system$",
        "^Postfix is running with backwards-compatible default settings$",
        "^See http://www\.postfix\.org/COMPATIBILITY_README\.html for details$",
        "^To disable backwards compatibility use \"postconf compatibility_level=2\" and \"postfix reload\"$",
        "^(dis)?connect from localhost\[::1\]$",
        "^daemon started -- version [0-9.]+, configuration %{FILENAME_SRC}$",
        "^reload -- version [0-9.]+, configuration %{FILENAME_SRC}$",
        "^stopping the Postfix mail system$",
        "^terminating on signal %{INT}$",
        "^waiting for the Postfix mail system to terminate$"
      ] }
    }
    grok {
      patterns_dir => [ "/etc/logstash/patterns.d/" ]
      tag_on_failure => [ ]
      add_tag => [ "Known Message", "Warning" ]
      match => { "message" => [
        "^warning: ignoring inet_(interfaces|protocols) parameter value change$",
        "^warning: old value: \"(ipv[46]|all)\", new value: \"(ipv[46]|all)\"$",
        "^warning: service smtp: ignoring inet_(interfaces|protocols) change$",
        "^warning: to change inet_(interfaces|protocols), stop and start Postfix$",
        "^warning: unix_trigger_event: read timeout for service public/pickup$",
        "^warning: SASL authentication failure: No worthy mechs found$",
        "^warning: database /etc/aliases\.db is older than source file /etc/aliases$"
      ] }
    }
    grok {
      patterns_dir => [ "/etc/logstash/patterns.d/" ]
      tag_on_failure => [ ]
      add_tag => [ "Known Message", "Error" ]
      match => { "message" => [
        "^connect to %{HOST_DST}\[%{IPV6}\]:587: (Connection timed out|Network is unreachable)$",
        "^error: unknown command: 'help'$",
        "^fatal: usage: postfix start \(or stop, reload, abort, flush, check, status, set-permissions, upgrade-configuration\)$"
      ] }
    }
    # Tag email_specific events (events that are about a particular email)
    if [@metadata][details] and [@metadata][details] =~ /=/ {
      kv { 
        source => "[@metadata][details]"
        trim => "<>,"
        target => "[postfix]" 
      }
    }
  }
}

# Partially cribbed from here: https://gist.github.com/danslimmon/6084415

