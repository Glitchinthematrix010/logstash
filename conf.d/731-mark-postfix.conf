filter {
  if [syslog][identifier] =~ /^postfix/ {
    mutate {
      add_field => { "application" => "Postfix" }
    }
    grok {
      patterns_dir => [ "/etc/logstash/patterns.d/" ]
      tag_on_failure => [ ]
      add_tag => [ "Known Message", "Benign" ]
      match => { "message" => [
        "^%{POSTFIX_QUEUE_ID}: %{GREEDYDATA:[@metadata][details]}$",
        "^%{POSTFIX_QUEUE_ID}: removed$",
        "^%{POSTFIX_QUEUE_ID}: warning: header (S|s)ubject: %{DATA:[postfix][subject]}; from=<%{EMAIL_ADDRESS:[postfix][from]}>( to=<%{EMAIL_ADDRESS:[postfix][to]}]>)?$",
        "^(refresh|start)ing the Postfix mail system$",
        "^connect to smtp\.gmail\.com\[%{IPV6}\]:587: Network is unreachable$",
        "^daemon started -- version [0-9.]+, configuration %{FILENAME_SRC}$",
        "^reload -- version [0-9.]+, configuration %{FILENAME_SRC}$",
        "^warning: ignoring inet_(interfaces|protocols) parameter value change$",
        "^warning: old value: \"all\", new value: \"ipv4\"$",
        "^warning: service smtp: ignoring inet_interfaces change$",
        "^warning: to change inet_(interfaces|protocols), stop and start Postfix$"
      ] }
    }
    grok {
      patterns_dir => [ "/etc/logstash/patterns.d/" ]
      tag_on_failure => [ ]
      add_tag => [ "Known Message", "Error" ]
      match => { "message" => [
        "^error: unknown command: 'help'$",
        "^fatal: usage: postfix start \(or stop, reload, abort, flush, check, status, set-permissions, upgrade-configuration\)$"
      ] }
    }
    # Tag email_specific events (events that are about a particular email)
    if [@metadata][details] and [@metadata][details] =~ /=/ {
      kv { 
        source => "[@metadata][details]"
        trim => "<>,"
        target => "[postfix]" 
      }
    }
  }
}

# Partially cribbed from here: https://gist.github.com/danslimmon/6084415

