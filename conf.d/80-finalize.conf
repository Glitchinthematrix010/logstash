filter {
  if [message] =~ /^\\{6,}/ {
    drop { }
  }

  if "Known Message" not in [tags] and "Unknown Message" not in [tags] {
    mutate {
      add_tag => [ "Unknown Message" ]
    }
  }

  if "Known Message" in [tags] and "Unknown Message" in [tags] {
    mutate {
      remove_tag => [ "Unknown Message" ]
    }
  }

  if "Known Message" in [tags] and "_grokparsefailure" in [tags] {
    mutate {
      remove_tag => [ "_grokparsefailure" ]
    }
  }

  if [intf_dst] =~ "wlan" { 
    mutate { 
      add_tag => [ "wifi" ] 
    } 
  } 

  if [syslog][program] =~ /rsyslogd-/ { 
    grok { 
     match => { "[syslog][program]" => "%{WORD}-%{POSINT:[syslog][pid]}" } 
    } 
  } 

  if [syslog][hostname] =~ /^[0-9.]+$/ {
    dns {
      nameserver => [ "127.0.0.1" ]
      action => "replace"
      reverse => [ "[syslog][hostname]" ]
    }
  }
 
  if [syslog][hostname] and ( [received_from] == "0:0:0:0:0:0:0:1" or [received_from] =~ /\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/ ) {
    mutate {
      replace => { "received_from" => "%{[syslog][hostname]}" }
    }
  } 
  mutate {
    add_field => [ "received_at", "%{@timestamp}" ]
  }
  if [application] and [http][request][uri] {
    kv {
      source => "[@metadata][param_list]"
      target => "[http][request][params]"
      prefix => "%{application}_"
      field_split => "?&"
    }
  } else if [http][request][uri] {
    kv {
      source => "[@metadata][param_list]"
      target => "[http][request][params]"
      field_split => "?&"
    }
  }
  if [host][src][hostname] and ![host][src][ipv4] and ![host][src][ipv6] {
    mutate {
      add_field => { "src" => "%{[host][src][hostname]}" }
    }
    dns {
      nameserver => [ "127.0.0.1" ]
      action => "replace"
      reverse => [ "src" ]
    }
    grok {
      patterns_dir => [ "/etc/logstash/patterns.d" ]
      tag_on_failure => [ ]
      match => { "src" => "%{IPV4}" }
      add_field => { "[host][src][ipv4]" => "%{src}" }
      remove_field => [ "src" ]
    }
    grok {
      patterns_dir => [ "/etc/logstash/patterns.d" ]
      tag_on_failure => [  ]
      match => { "src" => "%{IPV6}" }
      add_field => { "[host][src][ipv6]" => "%{src}" }
      remove_field => [ "src" ]
    }
    if [src] {
      mutate {
        remove_field => "src"
      } 
    }
  }
    
  if [host][dst][hostname] and ![host][dst][ipv4] and ![host][dst][ipv6] {
    mutate {
      add_field => { "dst" => "%{[host][dst][hostname]}" }
    }
    dns {
      nameserver => [ "127.0.0.1" ]
      action => "replace"
      reverse => [ "dst" ]
    }
    grok {
      patterns_dir => [ "/etc/logstash/patterns.d" ]
      tag_on_failure =>  [ ]
      match => { "dst" => "%{IPV4}" }
      add_field => { "[host][dst][ipv4]" => "%{dst}" }
      remove_field => [ "dst" ]
    }
    grok {
      patterns_dir => [ "/etc/logstash/patterns.d" ]
      tag_on_failure => [ ]
      match => { "dst" => "%{IPV6}" }
      add_field => { "[host][dst][ipv6]" => "%{dst}" }
      remove_field => [ "dst" ]
    }
    if [dst] {
      mutate {
        remove_field => "dst"
      } 
    }
  }

  if [host][dst][ipv4] == "" {
    mutate {
      remove_field => [ "[host][dst][ipv4]" ]
    }
  }

  if [host][src][ipv4] == "" {
    mutate {
      remove_field => [ "[host][src][ipv4]" ]
    }
  }








  if "info" in [tags] {
    mutate {
      remove_tag => [ "info" ]
      add_tag => [ "Info" ]
    }
  }

  if "error" in [tags] {
    mutate {
      remove_tag => [ "error" ]
      add_tag => [ "Error" ]
    }
  }

  mutate {
    remove_tag => [ "beats_input_codec_plain_applied" ]
    remove_field => [ "jsonmsg" ]
    rename  => { "User"  => "user" }
    convert => { 
                 "[host][dst][port]"                => "integer"
                 "[host][src][port]"                => "integer"
                 "[http][headers][content-length]"  => "integer"
                 "[http][response][bytes]"          => "integer"
                 "[http][response][code]"           => "integer" 
                 "[http][response][content-length]" => "integer"
                 "[syslog][code][facility]"         => "integer" 
                 "[syslog][code][severity]"         => "integer" 
                 "[syslog][pid]"                    => "integer" 
                 "gid"                              => "integer" 
                 "level"                            => "integer" 
                 "offset"                           => "integer" 
                 "pid"                              => "integer" 
                 "signal"                           => "integer" 
                 "uid"                              => "integer" 
                 "user"                             => "string" 
    }
  }
}
