filter {
  if [syslog_identifier] =~ /^postfix/ {
    mutate {
      add_field => { "application" => "Postfix" }
    }
    grok {
      patterns_dir => [ "/etc/logstash/patterns.d/" ]
      tag_on_failure => [ ]
      add_tag => [ "Known Message", "Benign" ]
      match => { "message" => [
        "^connect to smtp\.gmail\.com\[%{IPV6}\]:587: Network is unreachable$",
        "^%{POSTFIX_QUEUE_ID}: removed$",
        "^%{POSTFIX_QUEUE_ID}: from=<[^[:space:]]*>, size=[[:digit:]]+, nrcpt=[[:digit:]]+ \(queue active\)$",
        "^%{POSTFIX_QUEUE_ID}: message-id=\S+$",
        "^%{POSTFIX_QUEUE_ID}: to=<%{EMAIL_ADDRESS}>,( orig_to=<%{EMAIL_ADDRESS}>,)? relay=%{HOSTNAME:hostname_dst}\[%{IP_DST}\]:%{BASE10NUM:port_dst}, (conn_use=[[:digit:]]+, )?delay=[.[:digit:]]+(, delays=([.[:digit:]]+/){3}[.[:digit:]]+)?(, dsn=[245](\.[[:digit:]]+){2})?, status=sent \((2[[:digit:]]{2} )?.+\)$",
        "^%{POSTFIX_QUEUE_ID}: to=<%{EMAIL_ADDRESS}>, relay=local, delay=[.[:digit:]]+(, delays=([.[:digit:]]+/){3}[.[:digit:]]+)?(, dsn=[245](\.[[:digit:]]+){2})?, status=sent \(forwarded as %{POSTFIX_QUEUE_ID}\)$",
        "^%{POSTFIX_QUEUE_ID}: uid=\d+ from=\S+$",
        "^%{POSTFIX_QUEUE_ID}: message-id=<[0-9A-Z@.]+>$",
        "^%{POSTFIX_QUEUE_ID}: warning: header (S|s)ubject: %{DATA:postfix_subject}; from=<%{EMAIL_ADDRESS:postfix_from}>( to=<%{EMAIL_ADDRESS:postfix_to}>)?$"
      ] }
    }
    # Tag email_specific events (events that are about a particular email)
    if "Known Message" in [tags] {
      grok {
        patterns_dir => [ "/etc/logstash/patterns.d/" ]
        match => [ "message", "^%{POSTFIX_QUEUE_ID:postfix_queue_id}: %{GREEDYDATA:details}" ]
      }
      # We assume there are key-value pairs in details if it contains an '=' character.
      if [details] =~ /=/ {
        kv { 
          source => "details"
          trim => "<>,"
          prefix => "postfix_" 
        }
      }
      mutate {
        remove_field => [ "details" ]
      }
    }
  
  }
}

# Partially cribbed from here: https://gist.github.com/danslimmon/6084415

