filter {
  if [type] == "syslog" or [type] == "cee" and ( [syslog][identifier] == "named" or [syslog][identifier] == "named-pkcs11" ) {
    mutate {
      add_field => { "application" => "BIND" }
    }
    grok {
      patterns_dir => [ "/etc/logstash/patterns.d/" ]
      tag_on_failure => [ ]
      add_tag => [ "Known Message", "Benign" ]
      match => { "message" => [
        "^----------------------------------------------------$",
        "^BIND 9 is maintained by Internet Systems Consortium,$",
        "^GSSAPI client step %{INT}$",
        "^Inc\. \(ISC\), a non-profit 501\(c\)\(3\) public-benefit $",
        "^LDAP configuration for instance '%{DATA}' synchronized$",
        "^LDAP data for instance '%{DATA}' are being synchronized, please ignore message 'all zones loaded'$",
        "^\[truncated\] built with",
        "^all zones loaded$",
        "^automatic empty zone: %{DATA:[bind][zone]}$",
        "^available at https://www.isc.org/support$",
        "^client %{IP_SRC}#%{INT} \(%{DATA:[host][dst][hostname]}\): query: %{NOTSPACE:[bind][query]} IN %{NOTSPACE:[bind][query_type]} [+-](%{NOTSPACE:[bind][query_options]})? \(%{IP_DST}\)$",
        "^client %{IP_SRC}#%{PORT_SRC} \(%{NOTSPACE:[bind][zone]}\): transfer of '%{SITE_DOMAINS}}': (AXFR-style )?IXFR (start|end)ed$",
        "^client %{SITE_DNS_PRIMARY:[host][src][ipv4]}#%{PORT_SRC}: received notify for zone \'%{SITE_DOMAINS}\'$",
        "^clients-per-query (in|de)creased to %{INT}$",
        "^configuring command channel from '/etc/rndc\.key'+$",
        "^corporation\.  Support and training for BIND 9 are $",
        "^dispatch 0x%{BASE16NUM}: open_socket\(0\.0\.0\.0#\d+\) -> permission denied: continuing$",
        "^exiting$",
        "^flushing caches in all views succeeded$",
        "^generating session key for dynamic DNS$",
        "^ignoring inherited 'forward first;' for zone '.' - did you want 'forward only;' to override automatic empty zone '%{NOTSPACE:[bind][query_options]}'\?$",
        "^listening on IPv4 interface %{INTF_SRC}, %{IP_DST}#%{PORT_DST}$",
        "^loading configuration from '%{DATA}'$",
        "^loading configuration from '/etc/bind/named\.conf'$",
        "^managed-keys-zone: No DNSKEY RRSIGs found for '%{NOTSPACE:[bind][zone]}': success$",
        "^managed-keys-zone: loaded serial \d+$",
        "^no longer listening on %{IP_DST}(#%{PORT_DST})?$",
        "^option 'serial_autoincrement' is not supported, ignoring$",
        "^reading built-in trusted keys from file '%{DATA}'$",
        "^received control channel command '(flush|reload)|sign %{NOTSPACE:[bind][zone]}'$",
        "^reloading configuration succeeded$",
        "^reloading zones succeeded$",
        "^running$",
        "^set up managed keys zone for view %{DATA:[bind][view][name]}, file \'%{DATA:[files][src][filename]}\'$",
        "^shutting down automatic empty zones to enable forwarding for domain '.'$",
        "^shutting down$",
        "^sizing zone task pool based on \d+ zones$",
        "^starting BIND [0-9.P-]+ (-(4|6))? -u %{USER_DST} -f -c %{PATH:[files][src][filename]}$",
        "^success resolving '%{DATA:[bind][dst][hostname]' \(in '%{DATA:[bind][dst][zone]}'\?\) after (disabling EDNS|reducing the advertised EDNS UDP packet size to %{INT} octets)$",
        "^transfer of '%{NOTSPACE:[bind][zone]}/IN' from %{IP_DST}#%{PORT_DST}: Transfer completed: %{INT} messages, %{INT} records, %{INT} bytes, %{BASE10NUM} secs \(%{INT} bytes/sec\)$",
        "^transfer of '%{NOTSPACE:[bind][zone]}/IN' from %{IP_DST}#%{PORT_DST}: connected using %{IP_SRC}#%{PORT_SRC}$",
        "^using %{INT} UDP listener per interface$",
        "^using built-in DLV key for view _default$",
        "^using default UDP/IPv4 port range: \[1024, 65535\]$",
        "^using default UDP/IPv6 port range: [1024, 65535]$",
        "^using up to %{INT} sockets$",
        "^zone %{NOTSPACE:[bind][zone]}(/IN)?( \((un)?signed\))?: (Transfer started\.|transferred serial %{INT:[bind][src][serial]}|loaded serial %{INT:[bind][src][serial]})$",
        "^zone %{NOTSPACE:[bind][zone]}(/IN)?( \((un)?signed\))?: serial number \(%{INT:[bind][src][serial]}\) received from master %{IP_SRC}#%{PORT_SRC} < ours \(%{INT:[bind][dst][serial]}\)$",
        "^zone %{NOTSPACE:[bind][zone]}(/IN)?( \((un)?signed\))?: shutting down$",
        "^zone %{NOTSPACE:[bind][zone]}(/IN)?( \((un)?signed\))?: signing in progress$",
        "^zone %{NOTSPACE:[bind][zone]}(/IN)?( \(signed\))?: next key event: %{MONTHDAY}-%{MONTH}-%{YEAR} %{TIME}$",
        "^zone %{NOTSPACE:[bind][zone]}(/IN)?( \(signed\))?: receive_secure_serial: unchanged$",
        "^zone %{NOTSPACE:[bind][zone]}(/IN)?( \(signed\))?: reconfiguring NSEC3PARAM to '0 0 0 00'$",
        "^zone %{NOTSPACE:[bind][zone]}(/IN)?( \(signed\))?: reconfiguring zone keys$",
        "^zone %{NOTSPACE:[bind][zone]}(/IN)?( \((un)?signed\))?: sending notifies \(serial %{INT:[bind][dst][serial]}\)$"

      ] }
    }
    grok {
      patterns_dir => [ "/etc/logstash/patterns.d/" ]
      tag_on_failure => [ ]
      add_tag => [ "Known Message", "Error" ]
      match => { "message" => [
        "^managed-keys-zone: Unable to fetch DNSKEY set '%{NOTSPACE:[bind][zone]}': ncache nx(domain|rrset)$",
        "^\s*validating @%{BASE16NUM}: %{NOTSPACE:[bind][query]} %{NOTSPACE:[bind][query_type]}: bad cache hit \(%{NOTSPACE}/D(LV|S)\)$",
        "^\s*validating @%{BASE16NUM}: %{NOTSPACE:[bind][query]} %{NOTSPACE:[bind][query_type]}: (no valid signature found \(DS\)|got insecure response; parent indicates it should be secure|no valid signature found|verify failed due to bad signature \(keyid=%{INT}\): RRSIG (has expired|validity period has not begun))$",
        "^couldn't add command channel %{IP_DST}#%{PORT_DST}: file not found$",
        "^dns_dnssec_findmatchingkeys: error reading key file K%{NOTSPACE}: not found$",
        "^dumping master file: %{PATH:[files][dst][filename]}: open: (file not found|permission denied)$",
        "^error \(%{DATA:[bind][error]}\) resolving '%{DATA:[bind][query]}': %{IP_SRC}#%{PORT_SRC}$",
        "^lame server resolving '%{IP}\.in-addr\.arpa' \(in '[0-9.]+\.in-addr\.arpa'\?\): %{IP_DST}#%{PORT_DST}$"
      ] }
    }
  }
}
