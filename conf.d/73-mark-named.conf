filter {
  if [type] == "syslog" or [type] == "cee" and [syslog_identifier] == "named" {
    mutate {
      add_field => { "application" => "BIND" }
    }
    grok {
      patterns_dir => [ "/etc/logstash/patterns.d/" ]
      tag_on_failure => [ ]
      add_tag => [ "Known Message", "Benign" ]
      match => { "message" => [
        "^----------------------------------------------------$",
        "^all zones loaded$",
        "^automatic empty zone: .+$",
        "^client %{SITE_DNS_PRIMARY:ip_src}#%{BASE10NUM:port_src}: received notify for zone \'%{SITE_DOMAINS}\'$",
        "^clients-per-query (in|de)creased to \d+$",
        "^configuring command channel from '/etc/rndc\.key'+$",
        "^dispatch 0x%{BASE16NUM}: open_socket\(0\.0\.0\.0#\d+\) -> permission denied: continuing$",
        "^exiting$",
        "^listening on IPv4 interface %{INTERFACENAME:intf_dst}, %{IP_DST}#53$",
        "^loading configuration from '/etc/bind/named\.conf'$",
        "^managed-keys-zone: loaded serial \d+$",
        "^no longer listening on %{IP_DST}$",
        "^running$",
        "^shutting down$",
        "^sizing zone task pool based on \d+ zones$",
        "^success resolving '\S+' \(in '\S+'\?\) after (disabling EDNS|reducing the advertised EDNS UDP packet size to 512 octets)$",
        "^transfer of '[a-zA-Z0-9_.-]+/IN' from %{IP_DST}#53: connected using %{IP_SRC}#%{NUMBER:port_src}$",
        "^transfer of '[a-zA-Z0-9_.-]+/IN' from %{IP_DST}#53: Transfer completed: \d+ messages, \d+ records, \d+ bytes, \d+\.\d+ secs \(\d+ bytes/sec\)$",
        "^using \d+ UDP listener per interface$",
        "^using up to \d+ sockets$",
        "^zone \S+: (Transfer started\.|transferred serial \d+|loaded serial \d+)$",
        "^zone %{SITE_DOMAINS}\/IN: sending notifies \(serial %{BASE10NUM}\)+$"

      ] }
    }
    grok {
      patterns_dir => [ "/etc/logstash/patterns.d/" ]
      tag_on_failure => [ ]
      add_tag => [ "Known Message", "Error" ]
      match => { "message" => [
        "^error \(connection refused\) resolving '%{HOSTNAME:hostname_dst}/(A|AAAA)/IN': %{IP_DST}#53$",
        "^error \(unexpected RCODE (REFUSED|SERVFAIL)\) resolving '%{HOSTNAME:hostname_dst}/(A|AAAA)/IN': %{IP_DST}#53$",
        "^error \(unexpected RCODE (REFUSED|SERVFAIL)\) resolving '%{IP}\.in\.addr\.arpa/PTR/IN': %{IP_DST}#53$",
        "^lame server resolving '%{IP}\.in\.addr\.arpa' \(in '%{IP}\.in\.addr\.arpa'\?\): %{IP_DST}#53$"
      ] }
    }
  }
}
