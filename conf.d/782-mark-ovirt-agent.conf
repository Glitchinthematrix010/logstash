filter {
  if [syslog][identifier] == "ovirt-agent" or [syslog][identifier] == "docker/ovirt-agent" {
    mutate {
      add_field => { "application" => "ovirt-agent" }
    }
    grok {
      patterns_dir => [ "/etc/logstash/patterns.d/" ]
      add_tag => [ "Known Message", "Benign" ]
      tag_on_failure => [ ]
      match => { "message" => [
        "^MainThread::INFO::%{YEAR}-%{MONTHNUM}-%{MONTHDAY} %{TIME},%{INT}::ovirt-guest-agent::%{INT}::root::St(art|opp)ing oVirt guest agent$",
        "^Dummy-%{INT}::INFO::%{YEAR}-%{MONTHNUM}-%{MONTHDAY} %{TIME},%{INT}::OVirtAgentLogic::%{INT}::root::Received an external command: api-version\.\.\.$",
        "^Dummy-%{INT}::INFO::%{YEAR}-%{MONTHNUM}-%{MONTHDAY} %{TIME},%{INT}::OVirtAgentLogic::%{INT}::root::API Version updated from %{INT} to %{INT}$"
      ] }
    }
    if "Known Message" not in [tags] and "Benign" not in [tags] {
      grok {
        patterns_dir => [ "/etc/logstash/patterns.d/" ]
        tag_on_failure => [ ]
        add_tag => [ "Known Message","Error" ]
        match => { "message" => [
        "^Dummy-%{INT}::ERROR::%{YEAR}-%{MONTHNUM}-%{MONTHDAY} %{TIME},%{INT}::GuestAgentLinux2::%{INT}::root::Process \['%{FILENAME_SRC}'\] returned err code %{INT}$"
        ] }
      }
    }
    if "Known Message" not in [tags] and "Benign" not in [tags] and "Error" not in [tags] {
      grok {
        patterns_dir => [ "/etc/logstash/patterns.d/" ]
        tag_on_failure => [ ]
        add_tag => [ "Known Message","Warning" ]
        match => { "message" => [
          "^MainThread::WARNING::%{YEAR}-%{MONTHNUM}-%{MONTHDAY} %{TIME},%{INT}::GuestAgentLinux2::%{INT}::root::Failed to open mounts for container$"
        ] }
      }
    }
    #if "Benign" not in [tags] and "Known Message" not in [tags] {
    #  grok {
    #    patterns_dir => [ "/etc/logstash/patterns.d/" ]
    #    tag_on_failure => [ ]
    #    add_tag => [ "Alert", "Known Message"]
    #    match => { "message" => [
    #      "^$"
    #    ] }
    #  }
    #}
  }
}
