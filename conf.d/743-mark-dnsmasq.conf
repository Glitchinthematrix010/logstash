filter {
  if ([type] == "syslog" or [type] == "cee" ) and [syslog][identifier] == "dnsmasq" {
    mutate {
      add_field => { "application" => "DHCP" }
    }
    grok {
      patterns_dir => [ "/etc/logstash/patterns.d/" ]
      add_tag => [ "Known Message", "Benign" ]
      tag_on_failure => [ ]
      match => { "message" => [
        "^Maximum number of concurrent DNS queries reached \(max: %{INT}\)$",
        "^compile time options: %{DATA}$",
        "^exiting on receipt of SIGTERM$",
        "^no servers found in /etc/resolv.conf, will retry$",
        "^read /etc/hosts - %{POSINT} addresses$",
        "^read /var/lib/libvirt/dnsmasq/default\.addnhosts - %{INT} addresses$",
        "^read /var/lib/libvirt/dnsmasq/default\.hostsfile$",
        "^reading /etc/resolv\.conf$",
        "^started, version [0-9.]+ cachesize %{INT}$",
        "^using nameserver %{IP_DST}#53$"
      ] }
    }
    grok {
      patterns_dir => [ "/etc/logstash/patterns.d/" ]
      add_tag => [ "Known Message", "Error" ]
      tag_on_failure => [ ]
      match => { "message" => [
        "^overflow: %{INT} log entries lost$"
      ] }
    }
  } else if [type] == "syslog" or [type] == "cee" and [syslog][identifier] == "dnsmasq-dhcp" {
    mutate {
      add_field => { "application" => "DHCP" }
    }
    grok {
      patterns_dir => [ "/etc/logstash/patterns.d/" ]
      add_tag => [ "Known Message", "Benign" ]
      tag_on_failure => [ ]
      match => { "message" => [
        "^DHCP(INFORM|REQUEST|OFFER)\(%{INTF_SRC}\) %{IP_DST} %{MAC_DST} ?$",
        "^DHCP, IP range %{IPV4} -- %{IPV4}, lease time %{INT}[hdwm]$",
        "^DHCPACK\(%{INTF_SRC}\) %{IP_DST} %{MAC_DST}( %{HOST_DST})?$",
        "^DHCPDISCOVER\(%{INTF_DST}\)( %{IP_DST})? %{MAC_SRC} ?$",
        "^DHCPNAK\(%{INTF_DST}\) %{IP_SRC} %{MAC_SRC} wrong (address|network|server-ID)?$",
        "^DHCPNAK\(%{INTF_DST}\) %{IP_SRC} %{MAC_SRC} static lease available$",
        "^DHCPRELEASE\(%{INTF_DST}\) %{IP_SRC} %{MAC_SRC}\s+$",
        "^Ignoring domain %{HOSTNAME} for DHCP host name %{HOST_SRC}$",
        "^read /etc/ethers - %{INT} addresses$"
      ] }
    }
    if "Known Message" not in [tags] and "Benign" not in [tags] {
      grok {
        patterns_dir => [ "/etc/logstash/patterns.d/" ]
        tag_on_failure => [ ]
        add_tag => [ "Known Message","Error" ]
        match => { "message" => [
          "^DHCPNAK\(%{INTF_DST}\) %{IP_SRC} %{MAC_SRC} lease not found$",
          "^DHCPRELEASE\(%{INTF_DST}\) %{IP_SRC} %{MAC_SRC} unknown lease$"
        ] }
      }
    }
#    if "Benign" not in [tags] and "Known Message" not in [tags] {
#      grok {
#        patterns_dir => [ "/etc/logstash/patterns.d/" ]
#        tag_on_failure => [ ]
#        add_tag => [ "Alert", "Known Message"]
#        match => { "message" => [
#        ] }
#      }
#    }
  }
}
