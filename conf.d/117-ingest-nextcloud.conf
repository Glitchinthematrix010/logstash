filter {
  if [file] =~ "nextcloud$" or [type] == "nextcloud"  {
    json {
      source => "original"
      target => "nextcloud"
    }
    if "_jsonParseFailure" not in [tags] {
      mutate {
        add_field    => { "application"             => "nextcloud" } 
        replace      => { "message"                 => "%{[nextcloud][message]}" }
      }
      if [message] =~ /^Exception: / {
        mutate {
          add_field => { "[@metadata][original_exception]" => "%{message}" }
        }
        mutate {
          gsub      => [ "[@metadata][original_exception]","^Exception: ", "" ]
          add_tag   => [ "Error" ]
          remove_field => [ "message" ]
        }

        json {
          source  => "[@metadata][original_exception]"
          target  => "nextcloud_exception"
        }
        if [nextcloud_exception] {
          mutate {
            add_field  => { 
                       "[nextcloud][exception][code]"      =>   "%{[nextcloud_exception][Code]}"
                       "[nextcloud][exception][exception]" =>   "%{[nextcloud_exception][Exception]}"
                       "[nextcloud][exception][file]"      =>   "%{[nextcloud_exception][File]}"
                       "[nextcloud][exception][line]"      =>   "%{[nextcloud_exception][Line]}"
                       "[nextcloud][exception][message]"   =>   "%{[nextcloud_exception][Message]}"
                       "[nextcloud][exception][trace]"     =>   "%{[nextcloud_exception][Trace]}"
                       "[nextcloud][exception][user]"      =>   "%{[nextcloud_exception][User]}"
                       "message"                          =>   "%{[nextcloud][exception][message]}"
            }
          }
        }
      }
      mutate {
        remove_field => [ "original_exception", "nextcloud_exception" ]
        rename       => { "[nextcloud][url]"         => "[http][request][uri]" } 
        rename       => { "[nextcloud][method]"      => "[http][verb]" } 
        rename       => { "[nextcloud][user]"        => "[http][request][user]" }
      }
      date {
        match => [ "[nextcloud][time]" , "ISO8601" ]
      }
      grok {
        patterns_dir => [ "/etc/logstash/patterns.d" ]
        tag_on_failure => [ ]
        match => { "[nextcloud][remoteAddr]"  => [ 
          "^%{IP_SRC}:%{PORT_SRC}$", 
          "^%{IP_SRC}$" 
        ] } 
      }  
    }
  }
}
