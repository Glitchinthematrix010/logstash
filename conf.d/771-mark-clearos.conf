filter {
  if [received_from] =~ /^firewall/ or [received_from] == "10.0.0.1" or [received_from] == "127.0.0.1" {
    mutate {
      add_field => { "application" => "ClearOS" }
    }
    if [syslog][identifier] == "CROND" {
      grok {
        patterns_dir => [ "/etc/logstash/patterns.d/" ]
        add_tag => [ "Known Message", "Benign" ]
        tag_on_failure => [ ]
        match => { "message" => [
          "^\(root\) CMD \(/usr/clearos/apps/configuration_backup/deploy/backup-now >/dev/null 2>&1\)$",
          "^\(root\) CMD \(/usr/sbin/(network|proxy|resource)2db >/dev/null 2>&1\)$",
          "^\(root\) CMD \(/usr/sbin/(philesight-updatedb|purge-proxy) >/dev/null 2>&1\)$",
          "^\(root\) CMD \(/usr/sbin/timesync\)$",
          "^\(root\) CMD \(LANG=en_US /usr/clearos/apps/base/deploy/servicewatch >/dev/null\)$"
        ] }
      }
    } else if [syslog][identifier] == "crond" {
      grok {
        patterns_dir => [ "/etc/logstash/patterns.d/" ]
        add_tag => [ "Known Message", "Benign" ]
        tag_on_failure => [ ]
        match => { "message" => [
          "^%{CO_CRONACTIONS} %{CO_CRONJOBS}$"
        ] }
      }
    } else if [syslog][identifier] == "dhclient" {
      grok {
        patterns_dir => [ "/etc/logstash/patterns.d/" ]
        add_tag => [ "Known Message", "Benign" ]
        tag_on_failure => [ ]
        match => { "message" => [
          "^DHCPACK from %{IP_SRC} \(xid=0x%{BASE16NUM}\)$",
          "^DHCPREQUEST on %{INTF_SRC} to %{IP_DST} port 67 \(xid=0x%{BASE16NUM}\)$",
          "^bound to %{IP_DST} -- renewal in %{POSINT} seconds\.$"
        ] }
      }
    } else if [syslog][identifier] =~ /[a-zA-Z]+2db$/ {
      grok {
        patterns_dir => [ "/etc/logstash/patterns.d/" ]
        add_tag => [ "Known Message", "Benign" ]
        tag_on_failure => [ ]
        match => { "message" => [
          "^Processed %{POSINT} proxy log lines - %{POSINT} records added\.$"
        ] }
      }
    } else if [syslog][identifier] == "engine" {
      grok {
        patterns_dir => [ "/etc/logstash/patterns.d/" ]
        add_tag => [ "Known Message", "Error" ]
        tag_on_failure => [ ]
        match => { "message" => [
          "^exception: debug backtrace: %{DATA}$",
          "^exception: error: /usr/clearos/apps/base/libraries/Shell.php \(207\): %{MONTHDAY} %{MONTH} %{HOUR}:%{MINUTE}:%{SECOND} ntpdate\[\d+\]: no server suitable for synchronization found$"
        ] }
      }
    } else if [syslog][identifier] == "firewall" {
      grok {
        patterns_dir => [ "/etc/logstash/patterns.d/" ]
        add_tag => [ "Known Message", "Benign" ]
        tag_on_failure => [ ]
        match => { "message" => [
          "^# Config file$",
          "^# This script is run after every firewall restart.  Add custom rules here.$",
          "^Content filter is offline$",
          "^Defining custom chains$",
          "^Detected [LW]AN info - %{INTF_DST} %{IP_DST} on network %{IPV4}/%{POSINT}$",
          "^Detected [LW]AN role for interface: %{INTF_DST}$",
          "^Enabling NAT on WAN interface %{INTF_DST}$",
          "^Execution time: %{BASE10NUM}%{TIMEUNITS}$",
          "^iptables -I %{DATA}$",
          "^Loading (environment|kernel modules( for NAT)?)$",
          "^Port forwarding (tcp|udp|sctp) %{POSINT} to %{IP_DST}$",
          "^Running /etc/clearos/firewall\.d/(10-intrusion-prevention|custom|local)$",
          "^Running (1-to-1 NAT|blocked external|common|custom|default forwarding|default incoming allowed|incoming denied|user-defined (incoming|outgoing block|port forward|proxy)) rules$",
          "^Running multipath$",
          "^Running post-firewall 10670$",
          "^Setting (default policy to DROP|kernel parameters)$",
          "^Starting firewall...$",
          "^Using gateway mode$",
          "^Web proxy is online$"
        ] }
      }
    } else if [syslog][identifier] =~ /^run-parts\(\/etc\/cron\.(daily|hourly|weekly|monthly)\)$/ {
      grok {
        patterns_dir => [ "/etc/logstash/patterns.d/" ]
        add_tag => [ "Known Message", "Benign" ]
        tag_on_failure => [ ]
        match => { "message" => [
          "%{CO_CRONACTIONS} %{CO_CRONJOBS}$"
        ] }
      }
    } else if [syslog][identifier] == "servicewatch" {
      grok {
        patterns_dir => [ "/etc/logstash/patterns.d/" ]
        add_tag => [ "Known Message", "Benign" ]
        tag_on_failure => [ ]
        match => { "message" => [
          "^hard starting snort$"
        ] }
      }
    } else if [syslog][identifier] == "snort" {
      grok {
        patterns_dir => [ "/etc/logstash/patterns.d/" ]
        add_tag => [ "Known Message", "Alert" ]
        tag_on_failure => [ ]
        match => { "message" => [
          "^S5: Pruned session from cache that was using %{INT} bytes \(stale/timeout\). %{IP_SRC} %{PORT_SRC} --> %{IP_DST} %{PORT_DST} \(0\) : LWstate %{BASE16NUM} LWFlags %{BASE16NUM}$",
          "^S5: Session exceeded configured max (bytes|segs) to queue %{INT} using %{INT} (bytes|segs) \((client|server) queue\)\. %{IP_SRC} %{PORT_SRC} --> %{IP_DST} %{PORT_DST} \(0\) : LWstate %{BASE16NUM} LWFlags %{BASE16NUM}$",
          "^%{SNORTMSG}$"
        ] }
      }
    } else if [syslog][identifier] == "sudo" {
      grok {
        patterns_dir => [ "/etc/logstash/patterns.d/" ]
        add_tag => [ "Known Message", "Benign" ]
        tag_on_failure => [ ]
        match => { "message" => [
          "^clearsync : TTY=unknown ; PWD=/ ; USER=root ; COMMAND=/sbin/service firewall restart$"
        ] }
      }
    } else if [syslog][identifier] == "timesync" {
      grok {
        patterns_dir => [ "/etc/logstash/patterns.d/" ]
        add_tag => [ "Known Message", "Benign" ]
        tag_on_failure => [ ]
        match => { "message" => [
          "^synchronizing (with ntpdate|hardware clock)$"
        ] }
      }
    }
  } 
}
