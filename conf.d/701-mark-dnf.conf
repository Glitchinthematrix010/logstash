filter {
  if [type] == "syslog" or [type] == "cee" and [syslog][identifier] == "dnf" {
    mutate {
      add_field => { "application" => "dnf" }
    }
    grok {
      patterns_dir => [ "/etc/logstash/patterns.d/" ]
      add_tag => [ "Known Message", "Benign" ]
      tag_on_failure => [ ]
      match => { "message" => [
        "^%{DATA:[yum][repo]}: will expire after %{INT} seconds\.$",
        "^DNF version: [\d\.]+$",
        "^Error: Failed to synchronize cache for repo 'updates'$",
        "^Loaded plugins: %{GREEDYDATA:[yum][plugins]}$",
        "^Making cache files for all metadata files\.$",
        "^Metadata cache (refreshed recently|created)\.$",
        "^cachedir: %{DATA:[yum][cachedir]}$",
        "^not found (delta|update)info for: %{DATA:[yum][repo]}$",
        "^repo: using cache for: %{DATA:[yum][repo]}$"
      ] }
    }
#    if "Known Message" not in [tags] and "Benign" not in [tags] {
#      grok {
#        patterns_dir => [ "/etc/logstash/patterns.d/" ]
#        tag_on_failure => [ ]
#        add_tag => [ "Known Message","Error" ]
#        match => { "message" => [
#          "^$"
#        ] }
#      }
#    }
#    if "Benign" not in [tags] and "Known Message" not in [tags] {
#      grok {
#        patterns_dir => [ "/etc/logstash/patterns.d/" ]
#        tag_on_failure => [ ]
#        add_tag => [ "Alert", "Known Message"]
#        match => { "message" => [
#          "^$"
#        ] }
#      }
#    }
  }
}
