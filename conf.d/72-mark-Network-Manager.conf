filter {
  if [syslog][identifier]  == "NetworkManager" {
    grok {
      patterns_dir => [ "/etc/logstash/patterns.d/" ]
      tag_on_failure => [  ]
      add_tag => [ "Known Message", "Benign" ]
      match => { "message" => [
        "^<info>  \(%{INTF_SRC}\): bridge port veth%{BASE16NUM} was attached$",
        "^<info>  \(%{INTF_SRC}\): bridge port veth%{BASE16NUM} was detached$",
        "^<info>  \(%{INTF_SRC}\): canceled DHCP transaction, DHCP client pid %{BASE10NUM}$",
        "^<info>  \(%{INTF_SRC}\): DHCPv6 state changed timeout -> done$",
        "^<info>  \(%{INTF_SRC}\): DHCPv6 state changed unknown -> timeout$",
        "^<info>  \(%{INTF_SRC}\): link connected$",
        "^<info>  \(%{INTF_SRC}\): link disconnected$",
        "^<info>  \(%{INTF_SRC}\): link disconnected \(calling deferred action\)$",
        "^<info>  \(%{INTF_SRC}\): link disconnected \(deferring action for %{BASE10NUM} seconds\)$",
        "^<info>  \(%{INTF_SRC}\): new Ethernet device \(carrier: OFF, driver: '%{INTF_DST}', ifindex: %{BASE10NUM}\)$",
        "^<info>  \(%{INTF_SRC}\): released from master %{INTF_DST}$",
        "^<info>  \(%{INTF_SRC}\): device state change: activated -> unmanaged \(reason 'removed'\) \[100 10 36\]$",
        "^<info>  \(%{INTF_SRC}\): enslaved to %{INTF_DST}$",
        "^<info>  \(%{INTF_SRC}\): link connected$",
        "^<info>  \(%{INTF_SRC}\): new veth%{BASE16NUM} device \(carrier: OFF, driver: 'veth%{BASE16NUM}', ifindex: %{BASE10NUM}\)$"
      ] }
    }
    grok {
      patterns_dir => [ "/etc/logstash/patterns.d/" ]
      tag_on_failure => [  ]
      add_tag => [ "Known Message", "Error" ]
      match => { "message" => [
        "^<warn>  \(%{INTF_SRC}\): DHCPv6 request timed out\.$",
        "^<warn>  \(%{INTF_SRC}\): failed to detach bridge port %{INTF_SRC}$",
        "^<warn>  \(%{INTF_SRC}\): failed to disable userspace IPv6LL address handling$",
        "^<warn>  \(%{INTF_SRC}\): failed to find device %{BASE10NUM} '%{INTF_SRC}' with udev$"
      ] }
    }
  }
  if [syslog][identifier] == "nm-dispatcher" {
    grok {
      patterns_dir => [ "/etc/logstash/patterns.d/" ]
      tag_on_failure => [  ]
      add_tag => [ "Known Message" ]
      match => { "message" => [
        "^Dispatching action 'down' for %{INTF_SRC}$"
      ] }
    }
  }
}
