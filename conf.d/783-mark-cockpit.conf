filter {
  if [syslog][identifier] == "cockpit" or [syslog][identifier] == "docker/cockpit" {
    mutate {
      add_field => { "application" => "cockpit" }
    }
    grok {
      patterns_dir => [ "/etc/logstash/patterns.d/" ]
      add_tag => [ "Known Message", "Benign" ]
      tag_on_failure => [ ]
      match => { "message" => [
        "^\+ /bin/mount --bind /host/etc/cockpit /etc/cockpit$",
        "^\+ /usr/sbin/remotectl certificate --ensure$",
        "^\+ chmod 755 /host/etc/cockpit/ws-certs\.d$",
        "^\+ chmod 775 /host/var/lib/cockpit$",
        "^\+ chown root:root /host/etc/cockpit/ws-certs\.d$",
        "^\+ chown root:wheel /host/var/lib/cockpit$",
        "^\+ mkdir -p /host/etc/cockpit/ws-certs\.d$",
        "^\+ mkdir -p /host/var/lib/cockpit$",
        "^\+ sed -e /pam_selinux/d -e /pam_sepermit/d /etc/pam\.d/cockpit$",
        "^INFO: cockpit-ws: Using certificate: /etc/cockpit/ws-certs\.d/0-self-signed.cert$"
      ] }
    }
    #if "Known Message" not in [tags] and "Benign" not in [tags] {
    #  grok {
    #    patterns_dir => [ "/etc/logstash/patterns.d/" ]
    #    tag_on_failure => [ ]
    #    add_tag => [ "Known Message","Error" ]
    #    match => { "message" => [
    #      "^$"
    #    ] }
    #  }
    #}
    #if "Benign" not in [tags] and "Known Message" not in [tags] {
    #  grok {
    #    patterns_dir => [ "/etc/logstash/patterns.d/" ]
    #    tag_on_failure => [ ]
    #    add_tag => [ "Alert", "Known Message"]
    #    match => { "message" => [
    #      "^$"
    #    ] }
    #  }
    #}
  }
}
