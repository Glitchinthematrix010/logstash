filter {
  if [type] == "apache_access" and ([http][request][path] =~ /^\/ipa\// or [http][request][path] =~ /^\/ca\//) and [http][response][code] and [http][response][code] < 400 {
    mutate {
      add_field => { "application" => "IPA" }
    }
    grok {
      patterns_dir => [ "/etc/logstash/patterns.d/" ]
      tag_on_failure => [  ]
      add_tag => [ "Known Message", "Benign" ]
      match => { "[http][request][path]" => [
        "^/ca/admin/ca/getCertChain$",
        "^/ca/admin/ca/getConfigEntries$",
        "^/ca/admin/ca/getDomainXML$",
        "^/ca/admin/ca/tokenAuthenticate$",
        "^/ca/admin/ca/updateNumberRange$",
        "^/ca/rest/account/login$",
        "^/ca/rest/account/logout$",
        "^/ca/rest/securityDomain/domainInfo$",
        "^/ca/rest/securityDomain/installToken$",
        "^/ipa/json$",
        "^/ipa/session/json$",
        "^/ipa/ui/?$",
        "^/ipa/ui/css/(ipa|patternfly)\.css$",
        "^/ipa/ui/css/bootstrap-datepicker3.min.css$",
        "^/ipa/ui/favicon\.ico$",
        "^/ipa/ui/fonts/fontawesome/fontawesome-webfont\.ttf$",
        "^/ipa/ui/fonts/open-sans/OpenSans-(Bold|Italic|Light|Regular|Semibold)\.ttf$",
        "^/ipa/ui/images/(header-logo|login-screen-background|login-screen-logo|product-name)\.png$",
        "^/ipa/ui/ipa.css$",
        "^/ipa/ui/js/dojo/dojo\.js$",
        "^/ipa/ui/js/freeipa/plugins\.js$",
        "^/ipa/ui/js/libs/(bootstrap-datepicker|bootstrap|browser|jquery|jquery\.ordered-map|json2|patternfly|qrcode)\.js$",
        "^/ipa/ui/js/libs/loader\.js$"
      ] }
    }
  }          
  if [type] == "apache_error" and [message] =~ /^ipa: (DEBUG|ERROR|INFO|WARN):/ {
    mutate {
      add_field => { "application" => "IPA" }
    }
    grok {
      patterns_dir => [ "/etc/logstash/patterns.d/" ]
      tag_on_failure => [  ]
      add_tag => [ "Known Message", "Benign" ]
      match => { "[http][request][path]" => [
        "^\[jsonserver_(kerb|session)\] %{KRB_PRINCIPAL}: ping\(\): SUCCESS$",
        "^\[jsonserver_session\] %{KRB_PRINCIPAL}: dnszone_show\(<DNS name %{SITE_DOMAINS}\.>, rights=(False|True), all=(False|True), raw=(False|True), version=u'%{BASE10NUM}'\): SUCCESS$"
      ] }
    }
    grok {
      patterns_dir => [ "/etc/logstash/patterns.d/" ]
      tag_on_failure => [  ]
      add_tag => [ "Known Message", "Error" ]
      match => { "[http][request][path]" => [
        "^\[jsonserver_kerb\] %{KRB_PRINCIPAL}: dnszone_show\(<DNS name %{SITE_DOMAINS}\.>, rights=(False|True), all=(False|True), raw=(False|True), version=u'%{BASE10NUM}'\): NotFound$"
      ] }
    }
  }
}
