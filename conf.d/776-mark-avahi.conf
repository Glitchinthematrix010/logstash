filter {
  if [type] == "syslog" or [type] == "cee" and [syslog][identifier] == "avahi-daemon" {
    mutate {
      add_field => { "application" => "Avahi" }
    }
    grok {
      patterns_dir => [ "/etc/logstash/patterns.d/" ]
      add_tag => [ "Known Message", "Benign" ]
      tag_on_failure => [ ]
      match => { "message" => [
        "^(Joining|Leaving) mDNS multicast group on interface %{INTF_SRC}\.%{DATA} with address %{IP_SRC}\.$",
        "^Interface %{INTF_SRC}\.%{DATA} no longer relevant for mDNS\.$",
        "^Leaving mDNS multicast group on interface %{INTF_SRC}\.IPv4 with address %{IP_SRC}\.$",
        "^New relevant interface %{INTF_SRC}\.%{DATA} for mDNS\.$",
        "^Registering new address record for %{IP_SRC} on %{INTF_SRC}\.%{DATA}\.$",
        "^Withdrawing address record for %{IP_SRC} on %{INTF_SRC}\.$"
      ] }
    }
#    if "Known Message" not in [tags] and "Benign" not in [tags] {
#     grok {
#       patterns_dir => [ "/etc/logstash/patterns.d/" ]
#       tag_on_failure => [ ]
#       add_tag => [ "Known Message","Error" ]
#       match => { "message" => [
#         "^$"
#       ] }
#     }
#   }
#   if "Benign" not in [tags] and "Known Message" not in [tags] {
#     grok {
#       patterns_dir => [ "/etc/logstash/patterns.d/" ]
#       tag_on_failure => [ ]
#       add_tag => [ "Alert", "Known Message"]
#       match => { "message" => [
#         "^$"
#       ] }
#     }
#   }
  }
}
