filter {
  if [type] == "syslog" or [type] == "cee" {
    if [syslog][identifier] == "dnsmasq" {
      grok {
        patterns_dir => [ "/etc/logstash/patterns.d/" ]
        tag_on_failure => [ ]
        add_tag => [ "Known Message" ]
        match => { "message" => [
          "^possible DNS-rebind attack detected: %{IP_SRC}$"
        ] }
      }
    }
    if [syslog][identifier] == "chronyd" {
      grok {
        patterns_dir => [ "/etc/logstash/patterns.d/" ]
        tag_on_failure => [ ]
        add_tag => [ "Known Message" ]
        match => { "message" => [
          "^Selected source %{HOST_DST}$"
        ] }
      }
    }
    if [syslog][identifier] == "CROND" {
      grok {
        patterns_dir => [ "/etc/logstash/patterns.d/" ]
        tag_on_failure => [ ]
        add_tag => [ "Known Message", "Benign"  ]
        match => { "message" => [
          "^\(apache\) CMD \(php -f /var/www/html/owncloud/cron\.php\)$",
          "^\(root\) CMD \(/usr/sbin/logrotate /etc/logrotate\.d/libvirtd\)$",
          "^\(root\) CMD \(/usr/lib64/sa/sa1 1 1\)$",
          "^\(root\) CMD \(/usr/lib64/sa/sa2 -A\)$",
          "^\(root\) CMD \(/usr/sbin/raid-check\)$",
          "^\(root\) CMD \(run-parts /etc/cron\.hourly\)$"
        ] }
      }
    }
    if [syslog][identifier] == "dbus" {
      grok {
        patterns_dir => [ "/etc/logstash/patterns.d/" ]
        tag_on_failure => [ ]
        add_tag => [ "Known Message", "Benign" ]
        match => { "message" => [
          "^\[system\] Successfully activated service '%{DATA:[dbus][service]}'$",
          "^\[system\] Activating via systemd: service name='%{DATA:[dbus][service]}' unit='%{DATA:[systemd][unit]}'$"
        ] }
      }
    }
    if [syslog][identifier] == "dnf" {
      grok {
        patterns_dir => [ "/etc/logstash/patterns.d/" ]
        tag_on_failure => [ ]
        add_tag => [ "Known Message", "Benign" ]
        match => { "message" => [
          "^Metadata cache (created|refreshed recently)\.$"
        ] }
      }
    }
    if [syslog][identifier] =~ /^run-parts(\(.+\))?$/ {
      grok {
        patterns_dir => [ "/etc/logstash/patterns.d/" ]
        tag_on_failure => [ ]
        add_tag => [ "Known Message", "Benign" ]
        match => { "message" => [
          "^(\(.+\) )?(finished|starting) (0anacron|curator\.cron|0yum-(daily|hourly|monthly|security)\.cron|0logwatch|logrotate|man-db\.cron|mcelog.cron|mod-pagespeed|mysql-backup|mythtv-update-motd.cron|pam_shield|rhsmd|vdsm-logrotate)$"
        ] }
      }
    }
    if [syslog][identifier] == "auditd"  {
      grok {
        patterns_dir => [ "/etc/logstash/patterns.d/" ]
        tag_on_failure => [ ]
        add_tag => [ "Known Message", "Benign" ]
        match => { "message" => [
          "^Audit daemon rotating log files$"
        ] }
      }
    }
    if [syslog][identifier] == "dropbear"  {
      grok {
        patterns_dir => [ "/etc/logstash/patterns.d/" ]
        tag_on_failure => [ ]
        add_tag => [ "Known Message", "Benign" ]
        match => { "message" => [
          "^Exit before auth: Exited normally$",
          "^Child connection from %{IP_SRC}:%{PORT_SRC}$",
          "^Password auth succeeded for '%{USER_DST}' from %{IP_SRC}:%{PORT_SRC}$",
          "^Exit \(%{USER_DST}\): Exited normally$"
        ] }
      }
    }
    if [syslog][identifier] == "anacron"  {
      grok {
        patterns_dir => [ "/etc/logstash/patterns.d/" ]
        tag_on_failure => [ ]
        add_tag => [ "Known Message", "Benign" ]
        match => { "message" => [
          "^Job `.+' locked by another anacron - skipping$",
          "^Anacron [.[:alnum:]]+ started on [0-9-]+$",
          "^Anacron started on [0-9-]+$",
          "^Jobs will be executed sequentially$",
          "^Normal exit \([0-9]+ jobs? run\)$",
          "^Will run job `[._[:alnum:]-]+' in [0-9]+ min\.$",
          "^Job `[._[:alnum:]-]+' started$",
          "^Job `[._[:alnum:]-]+' terminated$",
          "^Job `[._[:alnum:]-]+' terminated (\(exit status: [[:digit:]]+\) )?\(mailing output\)$",
          "^Updated timestamp for job `[._[:alnum:]-]+' to [0-9-]+$"
        ] }
      }
    }
    if [syslog][identifier] == "java"  {
      grok {
        patterns_dir => [ "/etc/logstash/patterns.d/" ]
        tag_on_failure => [ ]
        add_tag => [ "Known Message", "Benign" ]
        match => { "message" => [
          "^%{TIME} \[ajp-apr-8009-exec-\d+\] INFO  o\.g\.g\.n\.b\.rest\.auth\.TokenRESTService - User \"%{USER_DST}\" successfully authenticated from %{IP_SRC}\.$",
          "^%{TIME} \[ajp-apr-8009-exec-\d+\] INFO  o\.g\.g\.n\.b\.BasicGuacamoleTunnelServlet - Using HTTP tunnel \(not WebSocket\)\. Performance may be sub-optimal\.$",
          "^%{TIME} \[ajp-apr-8009-exec-\d+\] INFO  o\.g\.g\.net\.basic\.TunnelRequestService - User \"%{USER_DST}\" successfully connected to \".+\"\.$"
        ] }
      }
      grok {
        patterns_dir => [ "/etc/logstash/patterns.d/" ]
        tag_on_failure => [ ]
        add_tag => [ "Known Message"]
        match => { "message" => [
          "^%{TIME} \[ajp-apr-8009-exec-\d+\] WARN  o\.g\.g\.s\.GuacamoleHTTPTunnelServlet - HTTP tunnel request rejected: No such tunnel\.$"
        ] }
      }
    
    }
    if [syslog][identifier] == "polkitd" {
      grok {
        patterns_dir => [ "/etc/logstash/patterns.d/" ]
        tag_on_failure => [ ]
        add_tag => [ "Known Message", "Benign" ]
        match => { "message" => [
          "^Registered Authentication Agent for unix-process:\d+:\d+ \(system bus name :%{BASE10NUM} \[/usr/bin/pkttyagent --notify-fd %{POSINT} --fallback\], object path /org/freedesktop/PolicyKit1/AuthenticationAgent, locale [[:lower:]]{2}_[[:upper:]]{2}(\.(UTF-8|.ISO88591))?\)$",
          "^Unregistered Authentication Agent for unix-process:%{POSINT}:%{POSINT} \(system bus name :%{BASE10NUM}, object path /org/freedesktop/PolicyKit1/AuthenticationAgent, locale [[:lower:]]{2}_[[:upper:]]{2}(\.(UTF-8|ISO88591))?\) \(disconnected from bus\)$"
        ] }
      }
    }
  }
}
