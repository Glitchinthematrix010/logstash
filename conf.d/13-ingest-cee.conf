filter {
  if [type] == "cee"  {
    grok {
	match => { "original" => "%{SYSLOGTIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_hostname} %{DATA:syslog_identifier}(\[%{BASE10NUM:syslog_pid}\])?: @cee: %{GREEDYDATA:jsonmsg}$" }
        tag_on_failure => [ "_ceeParseFailure" ]
    }
    mutate {
      gsub => [ "jsonmsg","}\\n$","}" ]
    }
    json {
      source => "jsonmsg"
    }
    mutate {
      rename => { "CODE_FILE" => "systemd_sourcecode_file" }
      rename => { "CODE_FUNCTION" => "systemd_sourcecode_function" }
      rename => { "CODE_FUNC" => "systemd_sourcecode_func" }
      rename => { "CODE_LINE" => "systemd_sourcecode_line" }
      rename => { "EXIT_CODE" => "systemd_code_exit" }
      rename => { "EXIT_STATUS" => "systemd_status_exit" }
      rename => { "INITRD_USEC" => "systemd_initrd_usec" }
      rename => { "KERNEL_USEC" => "systemd_kernel_usec" }
      rename => { "JOB_TYPE" => "systemd_job_type" }
      rename => { "JOB_RESULT" => "systemd_job_result" }
      rename => { "LEADER" => "systemd_leader" }
      rename => { "MESSAGE" => "message" }
      rename => { "MESSAGE_ID" => "systemd_message_id" }
      rename => { "PRIORITY" => "syslog_code_severity" }
      rename => { "RESULT" => "result" }
      rename => { "SESSION_ID" => "systemd_session_id" }
      rename => { "SEAT_ID" => "systemd_seat_id" }
      rename => { "SSSD_DOMAIN" => "systemd_sssd_domain" }
      rename => { "SYSLOG_FACILITY" => "syslog_code_facility" }
      rename => { "SYSLOG_IDENTIFIER" => "syslog_identifier" }
      rename => { "SYSLOG_PID" => "syslog_pid" }
      rename => { "UNIT" => "systemd_unit" }
      rename => { "USER_ID" => "systemd_user_id" }
      rename => { "USERSPACE_USEC" => "systemd_userspace_usec" }
      rename => { "WHERE" => "systemd_where" }
      rename => { "_AUDIT_LOGINUID" => "systemd_audit_loginuid" }
      rename => { "_AUDIT_SESSION" => "systemd_audit_session" }
      rename => { "_BOOT_ID" => "systemd_id_boot" }
      rename => { "_CAP_EFFECTIVE" => "systemd_cap_effective" }
      rename => { "_CMDLINE" => "systemd_command_line" }
      rename => { "_COMM" => "systemd_program" }
      rename => { "_EXE" => "systemd_executable" }
      rename => { "_GID" => "gid" }
      rename => { "_HOSTNAME" => "syslog_hostname" }
      rename => { "_MACHINE_ID" => "systemd_id_machine" }
      rename => { "_PID" => "syslog_pid" }
      rename => { "_SELINUX_CONTEXT" => "selinux_context" }
      rename => { "_SOURCE_MONOTONIC_TIMESTAMP" => "systemd_timestamp_monotonic" }
      rename => { "_SOURCE_REALTIME_TIMESTAMP" => "systemd_timestamp_realtime" }
      gsub => [ "systemd_timestamp_realtime", ".{3}$", "" ]
      rename => { "_SYSTEMD_CGROUP" => "systemd_cgroup" }
      rename => { "_SYSTEMD_OWNER_UID" => "systemd_owner_uid" }
      rename => { "_SYSTEMD_SESSION" => "systemd_session" }
      rename => { "_SYSTEMD_SLICE" => "systemd_slice" }
      rename => { "_SYSTEMD_UNIT" => "systemd_unit" }
      rename => { "_TRANSPORT" => "transport" }
      rename => { "_UID" => "uid"  }
      rename => { "msg" => "message" }
      convert => { "systemd_timestamp_realtime" => "integer" }
      convert => { "uid" => "integer" }
      convert => { "gid" => "integer" }
      convert => { "signal" => "integer" }
    }
    if [syslog_identifier] == "kibana" {
      json {
        source => "message"
      }
      mutate {
        replace => { "type" => "kibana" }
      }
    }
    date {
      match => [ "syslog_timestamp", "MMM  d HH:mm:ss", "MMM dd HH:mm:ss", "MMM d HH:mm:ss" ]
    }
  }
}
