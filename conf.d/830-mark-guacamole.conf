filter {
  if [type] == "apache_access" and [message] =~ /^\/guacamole\// and [http][response][code] and [http][response][code] < 400 {
    mutate {
        replace => { "application" => "guacamole" }
    }
    if [http][request][path] {
      kv {
        source => "[@metadata][param_list]"
        target => "[http][request][params]"
        prefix => "%{application}_"
        field_split => "?&"
      }
    }
    grok {
      patterns_dir => [ "/etc/logstash/patterns.d/" ]
      tag_on_failure => [ "Unknown Message" ]
      add_tag => [ "Known Message", "Benign" ]
      add_field => { "application" => "guacamole" }
      match => { "[http][request][path]" => [
        "^%{SITE_GUAC_ROOT}$",
        "^%{SITE_GUAC_ROOT}api/data/ldap/connectionGroups/ROOT/tree$",
        "^%{SITE_GUAC_ROOT}api/data/ldap/connections/[a-zA-Z%-_]+$",
        "^%{SITE_GUAC_ROOT}api/data/ldap/users/[a-zA-Z0-9]+/permissions$",
        "^%{SITE_GUAC_ROOT}api/languages$",
        "^%{SITE_GUAC_ROOT}api/tokens/%{BASE16NUM}$",
        "^%{SITE_GUAC_ROOT}app/element/templates/blank\.html$",
        "^%{SITE_GUAC_ROOT}app\.(cs|j)s$",
        "^%{SITE_GUAC_ROOT}fonts/carlito/Carlito-(Bold|Regular)\.woff$",
        "^%{SITE_GUAC_ROOT}images/(checkmark|circle-arrows|cog|drive|file|folder-closed|folder-up|guac-tricolor|lock|logo-\d+|magnifier|plus|progress|x)\.png$",
        "^%{SITE_GUAC_ROOT}images/action-icons/guac-(back|config|first-page|group-add|hide-pass|home|key|last-page|logout|monitor-add|next-page|prev-page|show-pass|user-add)(-dark)?\.png$",
        "^%{SITE_GUAC_ROOT}images/arrows/(down|up)\.png$",
        "^%{SITE_GUAC_ROOT}images/group-icons/guac-(closed|open)\.png$",
        "^%{SITE_GUAC_ROOT}images/mouse/blank\.(cur|gif)$",
        "^%{SITE_GUAC_ROOT}images/protocol-icons/guac-(monitor|plug|text)\.png$",
        "^%{SITE_GUAC_ROOT}images/settings/(tablet-keys|touch(pad|screen)|zoom-(in|out))\.png$",
        "^%{SITE_GUAC_ROOT}images/user-icons/guac-user\.png$",
        "^%{SITE_GUAC_ROOT}layouts/en-us-qwerty\.json$",
        "^%{SITE_GUAC_ROOT}translations/en\.json$",
        "^%{SITE_GUAC_ROOT}websocket-tunnel$"
      ] }
    }
  }
  if [syslog][identifier] == "guacd"  {
    mutate {
        add_field => { "application" => "guacamole" }
    }
    grok {
      patterns_dir => [ "/etc/logstash/patterns.d/" ]
      tag_on_failure => [  ]
      add_tag => [ "Known Message", "Benign" ]
      add_field => { "application" => "guacamole" }
      match => { "message" => [
        "^Dropped valid format: 16-bit PCM with 2 channels at 44100 Hz$",
        "^No security mode specified\. Defaulting to RDP\.$",
        "^RDP server closed connection$",
        "^Accepted format: 16-bit PCM with 2 channels at 44100 Hz$",
        "^All supported devices sent\.$",
        "^Capabilities sent\.$",
        "^Client ID confirmed$",
        "^Client disconnected$",
        "^ConnectClientToTcpAddr6: connect$",
        "^ConnectToTcpAddr: connect$",
        "^Connected to RDPDR %{BASE10NUM} as client %{BASE16NUM}$",
        "^Connection ID is \"\$%{UUID}\"$",
        "^Ignoring server capability set type=%{BASE16NUM}, length=%{INT}$",
        "^Loading keymap \"(base|en-us-qwerty)\"$",
        "^No security mode specified\. Defaulting to RDP\.$",
        "^Protocol \"\S+\" selected$",
        "^SSH connection (successful|ended)\.$",
        "^Sending capabilities\.\.\.$",
        "^Starting client$",
        "^User logged on$",
        "^guac(dr|snd) connected\.$"
      ] }
    }
    grok {
      patterns_dir => [ "/etc/logstash/patterns.d/" ]
      tag_on_failure => [  ]
      add_tag => [ "Known Message", "Error" ]
      add_field => { "application" => "guacamole" }
      match => { "message" => [
        "^Ignoring unsupported clipboard data$",
        "^Error connecting to RDP server$",
        "^Error parsing given address or port: Name or service not known$",
        "^Client is not responding\.$",
        "^Connection did not succeed$",
        "^Unable to connect to VNC server\.?$"
      ] }
    }
  }
  if [systemd][unit] == "tomcat.service" and [message] =~ /o\.g\.g/  {
    mutate {
        add_field => { "application" => "guacamole" }
    }
    grok {
      patterns_dir => [ "/etc/logstash/patterns.d/" ]
      tag_on_failure => [  ]
      add_tag => [ "Known Message", "Benign" ]
      add_field => { "application" => "guacamole" }
      match => { "message" => [
        "^%{TIME} \[Thread-%{INT}\] INFO  o\.g\.g\.net\.basic\.TunnelRequestService - User \"%{USER_DST}\" disconnected from connection \"%{DATA}\". Duration: %{INT} milliseconds$",
        "^%{TIME} \[http-apr-%{INT}-exec-%{INT}\] INFO  o\.g\.g\.net\.basic.TunnelRequestService - User \"%{USER_DST}\" (dis)?connected (from|to) connection \"%{DATA}\"\.( Duration: %{INT} milliseconds)?$",
        "^%{TIME} \[http-apr-%{INT}-exec-%{INT}\] INFO  o\.g\.g\.n\.b\.r\.a\.AuthenticationService - User \"%{USER_DST}\" successfully authenticated from \[%{IP_DST}, ::1\]\.$"
      ] }
    }
    grok {
      patterns_dir => [ "/etc/logstash/patterns.d/" ]
      tag_on_failure => [  ]
      add_tag => [ "Known Message", "Error" ]
      add_field => { "application" => "guacamole" }
      match => { "message" => [
        "^at %{NOTSPACE}\(%{NOTSPACE}\.java:%{INT}\)$",
        "^Exception in thread \"Thread-%{INT}\" java\.lang\.IllegalStateException: Message will not be sent because the WebSocket session has been closed$",
        "^%{TIME} \[http-apr-%{INT}-exec-%{INT}\] ERROR o\.g\.g\.w\.GuacamoleWebSocketTunnelEndpoint - Creation of WebSocket tunnel to guacd failed: (Connection to guacd timed out|Permission Denied)\.$"
      ] }
    }
  }
}
