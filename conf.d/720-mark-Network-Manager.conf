filter {
  if [syslog][identifier]  == "NetworkManager" {
    grok {
      patterns_dir => [ "/etc/logstash/patterns.d/" ]
      tag_on_failure => [  ]
      add_tag => [ "Known Message", "Benign" ]
      match => { "message" => [
        "^<%{NMLEVEL}>  %{GREEDYDATA:message}$"
      ] }
    }
    if [level] == "info" {
      grok {
        patterns_dir => [ "/etc/logstash/patterns.d/" ]
        tag_on_failure => [  ]
        add_tag => [ "Known Message", "Benign" ]
        match => { "message" => [
          "^(sleeping|waking up)\.\.\.$",
          "^Auto-activating connection '%{INTF_SRC}'.$",
          "^NetworkManager state is now %{NMSTATE}$",
          "^Policy set '%{INTF_SRC}' \(%{INTF_SRC}\) as default for IPv4 routing and DNS.$",
          "^\(%{INTF_SRC}\): Activation: starting connection '%{INTF_SRC}' \(%{UUID}\)$",
          "^\(%{INTF_SRC}\): Activation: successful, device activated\.$",
          "^\(%{INTF_SRC}\): DHCPv6 state changed (timeout|unknown) -> (done|timeout)$",
          "^\(%{INTF_SRC}\): bridge port veth%{BASE16NUM} was (at|de)tached$",
          "^\(%{INTF_SRC}\): canceled DHCP transaction, DHCP client pid %{POSINT:[syslog][pid]}$",
          "^\(%{INTF_SRC}\): device state change: %{NMSTATECHNG} -> %{NMSTATECHNG} \(reason '(managed|none|sleeping)'\) \[\d+ \d+ \d+\]$",
          "^\(%{INTF_SRC}\): device state change: activated -> unmanaged \(reason 'removed'\) \[100 10 36\]$",
          "^\(%{INTF_SRC}\): enslaved to %{INTF_DST}$",
          "^\(%{INTF_SRC}\): link connected$",
          "^\(%{INTF_SRC}\): link disconnected \(calling deferred action\)$",
          "^\(%{INTF_SRC}\): link disconnected \(deferring action for %{BASE10NUM} seconds\)$",
          "^\(%{INTF_SRC}\): link disconnected$",
          "^\(%{INTF_SRC}\): new Ethernet device \(carrier: OFF, driver: '%{INTF_DST}', ifindex: %{INT}\)$",
          "^\(%{INTF_SRC}\): new veth%{BASE16NUM} device \(carrier: OFF, driver: 'veth%{BASE16NUM}', ifindex: %{INT}\)$",
          "^\(%{INTF_SRC}\): released from master %{INTF_DST}$",
          "^connectivity: check for uri 'http://fedoraproject\.org/static/hotspot\.txt' failed with 'Error resolving 'fedoraproject\.org': No address associated with hostname'$",
          "^kernel firmware directory '/lib/firmware' changed$",
          "^sleep requested \(sleeping: (yes|no)  enabled: (yes|no)\)$"
        ] }
      }
    } else if [level] == "warn" {
      grok {
        patterns_dir => [ "/etc/logstash/patterns.d/" ]
        tag_on_failure => [  ]
        add_tag => [ "Known Message", "Error" ]
        match => { "message" => [
          "^\(%{INTF_SRC}\) firewall zone remove failed \[3\]: \(4\) Did not receive a reply\. Possible causes include: the remote application did not send a reply, the message bus security policy blocked the reply, the reply timeout expired, or the network connection was broken\.$",
          "^\(%{INTF_SRC}\): DHCPv6 request timed out\.$",
          "^\(%{INTF_SRC}\): failed to detach bridge port %{INTF_SRC}$",
          "^\(%{INTF_SRC}\): failed to disable userspace IPv6LL address handling$",
          "^\(%{INTF_SRC}\): failed to find device %{INT} '%{INTF_SRC}' with udev$"
        ] }
      }
    }
  } else if [syslog][identifier] == "nm-dispatcher" {
    grok {
      patterns_dir => [ "/etc/logstash/patterns.d/" ]
      tag_on_failure => [  ]
      add_tag => [ "Known Message" ]
      match => { "message" => [
        "^Dispatching action '(down|pre-up|up)' for %{INTF_SRC}$"
      ] }
    }
  }
}
